name: build-and-deploy

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 0 */1 * *'

env:
  BUILD_DIRECTORY: ./dist
  SKIP_PREPARE: 1

jobs:
  Build:
    strategy:
      matrix:
        branch: ['master', 'release-10.8.z']
    concurrency: build-${{ matrix.branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Jellyfin-Web
        uses: actions/checkout@v2
        with:
          repository: jellyfin/jellyfin-web
          ref: ${{ matrix.branch }}

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-modules-no-hit

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: lts/*

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build:production

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.branch }}
          path: ${{ env.BUILD_DIRECTORY }}

  Cloudflare:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ['master', 'release-10.8.z']
    concurrency: cf-${{ matrix.branch }}
    needs: ['Build']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch Build
        uses: actions/download-artifact@v3
        with:
          name: dist-${{ matrix.branch }}
          path: ${{ env.BUILD_DIRECTORY }}

      - name: Setting up Cloudflare
        run: |
          cp -r pages/. $BUILD_DIRECTORY

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: build
          folder: ${{ env.BUILD_DIRECTORY }}
          target-folder: ${{ matrix.branch }}
          clean: true

  Docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ['master', 'release-10.8.z']
    concurrency: docker-${{ matrix.branch }}
    needs: ['Build']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup BuildX
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image üê≥
        run: docker buildx build
          --platform=linux/amd64,linux/arm/v7,linux/arm64
          --tag ghcr.io/laser-yi/jellyfin-web:${{ matrix.branch }}
          --push
          .
