(self.webpackChunk=self.webpackChunk||[]).push([[7786],{87786:function(e,t,i){"use strict";i.r(t),i(5769),i(61013),i(27471),i(63238),i(61418),i(17460),i(14078),i(52077),i(72482),i(48410),i(19068),i(87211),i(25901),i(92189),i(95163),i(99785),i(91047);var a=i(83094),n=i(27515),l=i(1115),s=i(12392),r=i(78695),c=i(53754),o=i(28978),u=(i(65219),i(30983),i(78066),i(21865),i(50447),i(56561),i(16589),i(93462),i(53913)),b=i(2374),d=i.n(b);function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function h(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(void 0,n=function(e,t){if("object"!==p(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var a=i.call(e,t);if("object"!==p(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(a.key,"string"),"symbol"===p(n)?n:String(n)),a)}var n}function f(e){return e.preventDefault(),!1}function m(e,t,i){var a=i.checked;a=a||null,o.setFilter(t,a)}function v(e,t){for(var i=a.ZP.parentWithClass(e,"checkboxList-verticalwrap"),l=n.Z.getFocusableElements(i),s=-1,r=0,c=l.length;r<c;r++)if(l[r]===e){s=r;break}s+=t,s=Math.min(l.length-1,s);var o=l[s=Math.max(0,s)];o&&n.Z.focus(o)}function y(e,t,a){Promise.resolve().then(i.bind(i,74227)).then((function(i){var n=a?"on":"off";i.centerFocus[n](e,t)}))}function g(e){switch(e.detail.command){case"left":v(e.target,-1),e.preventDefault();break;case"right":v(e.target,1),e.preventDefault()}}function S(e,t){for(var i=e.querySelectorAll(".checkboxList-verticalwrap"),a=0,n=i.length;a<n;a++)t?s.ZP.on(i[a],g):s.ZP.off(i[a],g)}var k=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,i;return t=e,(i=[{key:"show",value:function(e){return new Promise((function(t,i){var a={removeOnClose:!0,scrollY:!1};r.Z.tv?a.size="fullscreen":a.size="small";var n=l.default.createDialog(a);n.classList.add("formDialog");var s="";s+='<div class="formDialogHeader">',s+='<button is="paper-icon-button-light" class="btnCancel hide-mouse-idle-tv" tabindex="-1"><span class="material-icons arrow_back"></span></button>',s+='<h3 class="formDialogHeaderTitle">${Filters}</h3>',s+="</div>",s+=d(),n.innerHTML=c.ZP.translateHtml(s,"core");for(var b,p=n.querySelectorAll(".viewSetting"),h=0,v=p.length;h<v;h++)-1===e.visibleSettings.indexOf(p[h].getAttribute("data-settingname"))?p[h].classList.add("hide"):p[h].classList.remove("hide");!function(e,t){e.querySelector("form").addEventListener("submit",f);var i,a,n=e.querySelectorAll(".simpleFilter");for(i=0,a=n.length;i<a;i++)"INPUT"===n[i].tagName?n[i].checked=t[n[i].getAttribute("data-settingname")]||!1:n[i].querySelector("input").checked=t[n[i].getAttribute("data-settingname")]||!1;var l=t.VideoTypes?t.VideoTypes.split(","):[];for(i=0,a=(n=e.querySelectorAll(".chkVideoTypeFilter")).length;i<a;i++)n[i].checked=-1!==l.indexOf(n[i].getAttribute("data-filter"));var s=t.SeriesStatus?t.SeriesStatus.split(","):[];for(i=0,a=(n=e.querySelectorAll(".chkSeriesStatus")).length;i<a;i++)n[i].checked=-1!==s.indexOf(n[i].getAttribute("data-filter"));e.querySelector(".basicFilterSection .viewSetting:not(.hide)")?e.querySelector(".basicFilterSection").classList.remove("hide"):e.querySelector(".basicFilterSection").classList.add("hide"),e.querySelector(".featureSection .viewSetting:not(.hide)")?e.querySelector(".featureSection").classList.remove("hide"):e.querySelector(".featureSection").classList.add("hide")}(n,e.settings),function(e,t){var i=u.Z.getApiClient(t.serverId),a=Object.assign(t.filterMenuOptions,{UserId:i.getCurrentUserId(),ParentId:t.parentId,IncludeItemTypes:t.itemTypes.join(",")});i.getFilters(a).then((function(i){!function(e,t,i){!function(e,t,a,n,l){var s=e.querySelector(".genreFilters");n.length?s.classList.remove("hide"):s.classList.add("hide");var r="";r+=n.map((function(e){var t="";return t+="<label>",t+='<input is="emby-checkbox" type="checkbox"'+(function(e){var t=-1===(i.settings.GenreIds||"").indexOf("|")?",":"|";return-1!==(t+(i.settings.GenreIds||"")+t).indexOf(t+e.Id+t)}(e)?" checked":"")+' data-filter="'+e.Id+'" class="chkGenreFilter"/>',(t+="<span>"+e.Name+"</span>")+"</label>"})).join(""),s.querySelector(".filterOptions").innerHTML=r}(e,0,0,t.Genres)}(e,i,t)}))}(n,e),S(n,!0),n.querySelector(".btnCancel").addEventListener("click",(function(){l.default.close(n)})),r.Z.tv&&y(n.querySelector(".formDialogContent"),!1,!0),n.querySelector("form").addEventListener("change",(function(){b=!0}),!0),l.default.open(n).then((function(){return S(n,!1),r.Z.tv&&y(n.querySelector(".formDialogContent"),!1,!1),b?(function(e,t,i){for(var a=e.querySelectorAll(".simpleFilter"),n=0,l=a.length;n<l;n++)"INPUT"===a[n].tagName?m(0,i+"-filter-"+a[n].getAttribute("data-settingname"),a[n]):m(0,i+"-filter-"+a[n].getAttribute("data-settingname"),a[n].querySelector("input"));for(var s=[],r=0,c=(a=e.querySelectorAll(".chkVideoTypeFilter")).length;r<c;r++)a[r].checked&&s.push(a[r].getAttribute("data-filter"));o.setFilter(i+"-filter-VideoTypes",s.join(","));for(var u=[],b=0,d=(a=e.querySelectorAll(".chkSeriesStatus")).length;b<d;b++)a[b].checked&&u.push(a[b].getAttribute("data-filter"));for(var p=[],h=0,f=(a=e.querySelectorAll(".chkGenreFilter")).length;h<f;h++)a[h].checked&&p.push(a[h].getAttribute("data-filter"));o.setFilter(i+"-filter-GenreIds",p.join(","))}(n,e.settings,e.settingsKey),t()):t()}))}))}}])&&h(t.prototype,i),Object.defineProperty(t,"prototype",{writable:!1}),e}();t.default=k},2374:function(e){e.exports='<div class="formDialogContent smoothScrollY"> <div class="dialogContentInner dialog-content-centered"> <form style="margin:auto"> <div class="verticalSection verticalSection-extrabottompadding basicFilterSection focuscontainer-x" style="margin-top:2em"> <div class="checkboxList checkboxList-verticalwrap"> <label class="viewSetting simpleFilter" data-settingname="IsUnplayed"> <input type="checkbox" is="emby-checkbox"/> <span>${Unplayed}</span> </label> <label class="viewSetting simpleFilter" data-settingname="IsPlayed"> <input type="checkbox" is="emby-checkbox"/> <span>${Played}</span> </label> <label class="viewSetting simpleFilter" data-settingname="IsFavorite"> <input type="checkbox" is="emby-checkbox"/> <span>${Favorite}</span> </label> <label class="viewSetting simpleFilter" data-settingname="IsResumable"> <input type="checkbox" is="emby-checkbox"/> <span>${ContinueWatching}</span> </label> </div> </div> <div class="verticalSection verticalSection-extrabottompadding viewSetting focuscontainer-x" data-settingname="SeriesStatus"> <h2 class="checkboxListLabel">${HeaderSeriesStatus}</h2> <div class="checkboxList checkboxList-verticalwrap"> <label> <input type="checkbox" is="emby-checkbox" class="chkSeriesStatus" data-filter="Continuing"/> <span>${Continuing}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="chkSeriesStatus" data-filter="Ended"/> <span>${Ended}</span> </label> </div> </div> <div class="verticalSection verticalSection-extrabottompadding hide genreFilters focuscontainer-x"> <h2 class="checkboxListLabel">${Genres}</h2> <div class="checkboxList checkboxList-verticalwrap filterOptions"> </div> </div> <div class="verticalSection verticalSection-extrabottompadding viewSetting focuscontainer-x" data-settingname="VideoType"> <h2 class="checkboxListLabel">${HeaderVideoType}</h2> <div class="checkboxList checkboxList-verticalwrap"> <label> <input type="checkbox" is="emby-checkbox" class="simpleFilter" data-settingname="IsHD"/> <span>HD</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="simpleFilter" data-settingname="Is4K"/> <span>4K</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="simpleFilter" data-settingname="IsSD"/> <span>SD</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="simpleFilter" data-settingname="Is3D"/> <span>3D</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="chkVideoTypeFilter" data-filter="Bluray"/> <span>Blu-ray</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="chkVideoTypeFilter" data-filter="Dvd"/> <span>DVD</span> </label> </div> </div> <div class="verticalSection verticalSection-extrabottompadding featureSection hide focuscontainer-x"> <h2 class="checkboxListLabel">${Features}</h2> <div class="checkboxList checkboxList-verticalwrap"> <label class="viewSetting simpleFilter" data-settingname="HasSubtitles"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${Subtitles}</span> </label> <label class="viewSetting simpleFilter" data-settingname="HasTrailer"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${Trailers}</span> </label> <label class="viewSetting simpleFilter" data-settingname="HasSpecialFeature"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${Extras}</span> </label> <label class="viewSetting simpleFilter" data-settingname="HasThemeSong"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${ThemeSongs}</span> </label> <label class="viewSetting simpleFilter" data-settingname="HasThemeVideo"> <input type="checkbox" is="emby-checkbox" class="chkFeatureFilter"/> <span>${ThemeVideos}</span> </label> </div> </div> </form> </div> </div> '}}]);