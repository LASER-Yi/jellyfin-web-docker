"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1341],{21341:function(e,t,n){n.r(t),n.d(t,{default:function(){return g}}),n(5769),n(63238),n(61418),n(17460),n(14078);var i,o,r,a,s=n(93355),l=n(94994),d=n(30325),c=n(28540),u=n(54517),v=(n(38228),n(85500),n(62033),n(61414),n(18613)),f=!1;function m(e){f=e,s.default.close(i)}function b(e){var t=this,n=v.Z.getApiClient(r);return n.getLiveTvTimer(o).then((function(e){e.PrePaddingSeconds=60*t.querySelector("#txtPrePaddingMinutes").value,e.PostPaddingSeconds=60*t.querySelector("#txtPostPaddingMinutes").value,n.updateLiveTvTimer(e).then(a)})),e.preventDefault(),!1}var g={show:function(e,t,g){return new Promise((function(p){f=!1,r=t,c.ZP.show(),g=g||{},a=p;var P={removeOnClose:!0,scrollY:!1};d.Z.tv&&(P.size="fullscreen");var h=s.default.createDialog(P);h.classList.add("formDialog"),h.classList.add("recordingDialog"),d.Z.tv||(h.style["min-width"]="20%",h.classList.add("dialog-fullscreen-lowres"));var y,S="";S+=l.ZP.translateHtml('<div class="formDialogHeader"> <button is="paper-icon-button-light" class="btnCancel autoSize" tabindex="-1" title="${ButtonBack}"><span class="material-icons arrow_back" aria-hidden="true"></span></button> <h3 class="formDialogHeaderTitle"> ${HeaderRecordingOptions} </h3> </div> <div class="formDialogContent smoothScrollY"> <div class="dialogContentInner dialog-content-centered"> <form> <br/> <div class="inputContainer"> <div class="flex align-items-center"> <div class="flex-grow"> <input is="emby-input" type="number" id="txtPrePaddingMinutes" pattern="[0-9]*" required="required" min="0" step="1" label="${LabelStartWhenPossible}"/> </div> <div class="fieldDescription" style="margin-left:.5em;font-size:90%;margin-top:1.3em"> ${MinutesBefore} </div> </div> </div> <div class="inputContainer"> <div class="flex align-items-center"> <div class="flex-grow"> <input is="emby-input" type="number" id="txtPostPaddingMinutes" pattern="[0-9]*" required="required" min="0" step="1" label="${LabelStopWhenPossible}"/> </div> <div class="fieldDescription" style="margin-left:.5em;font-size:90%;margin-top:1.3em"> ${MinutesAfter} </div> </div> </div> <br/> <div class="formDialogFooter"> <button is="emby-button" type="submit" class="raised btnSubmit block formDialogFooterItem button-submit hide"> <span>${Save}</span> </button> <button is="emby-button" type="button" class="raised btnCancelRecording block formDialogFooterItem button-cancel" style="white-space:nowrap"> <span>${HeaderCancelRecording}</span> </button> </div> </form> </div> </div> ',"core"),h.innerHTML=S,!1===g.enableCancel&&h.querySelector(".formDialogFooter").classList.add("hide"),i=h,h.addEventListener("closing",(function(){f||h.querySelector(".btnSubmit").click()})),h.addEventListener("close",(function(){f&&p({updated:!0,deleted:!0})})),d.Z.tv&&u.default.centerFocus.on(h.querySelector(".formDialogContent"),!1),(y=h).querySelector(".btnCancel").addEventListener("click",(function(){m(!1)})),y.querySelector(".btnCancelRecording").addEventListener("click",(function(){var e,t;(e=v.Z.getApiClient(r),t=o,Promise.resolve().then(n.bind(n,30531)).then((function(n){n.default.cancelTimerWithConfirmation(t,e.serverId())}))).then((function(){m(!0)}))})),y.querySelector("form").addEventListener("submit",b),function(e,t){c.ZP.show(),o=t,v.Z.getApiClient(r).getLiveTvTimer(t).then((function(t){!function(e,t){e.querySelector("#txtPrePaddingMinutes").value=t.PrePaddingSeconds/60,e.querySelector("#txtPostPaddingMinutes").value=t.PostPaddingSeconds/60,c.ZP.hide()}(e,t),c.ZP.hide()}))}(h,e),s.default.open(h)}))}}}}]);