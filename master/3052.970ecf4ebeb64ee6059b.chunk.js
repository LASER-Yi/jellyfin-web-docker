"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3052],{93052:function(e,t,l){l.r(t),l.d(t,{default:function(){return T},show:function(){return H}}),l(63238),l(95289),l(61418);var i=l(90914),a=l(53913),s=l(83094),n=l(56705),r=l(13800),o=l(78695),u=l(44614),d=l(25152),c=(l(78066),l(20716),l(6626),l(1892)),b=l.n(c),p=l(95760),f=l.n(p),v=l(38311),m=l.n(v),g=l(58192),h=l.n(g),y=l(38060),S=l.n(y),L=l(54865),Z=l.n(L),k=l(13005),q={};q.styleTagTransform=Z(),q.setAttributes=h(),q.insert=m().bind(null,"head"),q.domAPI=f(),q.insertStyleElement=S(),b()(k.Z,q),k.Z&&k.Z.locals&&k.Z.locals;var w,D,C,F=!1;function P(e){n.ZP.hide();var t=e.target.error;t.code!==t.ABORT_ERR&&(0,d.Z)(u.ZP.translate("MessageFileReadError"))}function x(e){return e&&[".sub",".srt",".vtt",".ass",".ssa"].some((function(t){return e.name.endsWith(t)}))}function E(e){var t=C;if(!x(t))return(0,d.Z)(u.ZP.translate("MessageSubtitleFileTypeAllowed")),void e.preventDefault();n.ZP.show();var l=s.ZP.parentWithClass(this,"dialog"),r=l.querySelector("#selectLanguage").value,o=l.querySelector("#chkIsForced").checked;a.Z.getApiClient(D).uploadItemSubtitle(w,r,o,t).then((function(){l.querySelector("#uploadSubtitle").value="",n.ZP.hide(),F=!0,i.default.close(l)})),e.preventDefault()}function H(e){return new Promise((function(t){F=!1,function(e,t){w=(e=e||{}).itemId,D=e.serverId;var l={removeOnClose:!0,scrollY:!1};o.Z.tv?l.size="fullscreen":l.size="small";var a,s=i.default.createDialog(l);s.classList.add("formDialog"),s.classList.add("subtitleUploaderDialog"),s.innerHTML=u.ZP.translateHtml('<div class="formDialogHeader"> <button is="paper-icon-button-light" class="btnCancel autoSize" tabindex="-1"><em class="material-icons arrow_back"></em></button> <h3 class="formDialogHeaderTitle"> ${HeaderUploadSubtitle} </h3> </div> <div class="formDialogContent"> <div class="dialogContentInner"> <form class="uploadSubtitleForm"> <div class="flex align-items-center" style="margin:1.5em 0"> <h2 style="margin:0">${HeaderAddUpdateSubtitle}</h2> <button is="emby-button" type="button" class="raised raised-mini btnBrowse" style="margin-left:1.5em"> <em class="material-icons">folder</em> <span>${Browse}</span> </button> </div> <div> <div class="subtitleEditor-dropZone fieldDescription"> <div id="labelDropSubtitle">${LabelDropSubtitleHere}</div> <output id="subtitleOutput" class="flex align-items-center justify-content-center" style="position:absolute;top:0;left:0;right:0;bottom:0;width:100%"></output> <input type="file" accept=".sub,.srt,.vtt,.ass,.ssa" id="uploadSubtitle" name="uploadSubtitle" style="position:absolute;top:0;left:0;right:0;bottom:0;width:100%;opacity:0"/> </div> <div id="fldUpload" class="hide"> <br/> <div class="checkboxContainer"> <label> <input type="checkbox" is="emby-checkbox" id="chkIsForced"/> <span>${LabelIsForced}</span> </label> </div> <div class="selectContainer flex-grow"> <select is="emby-select" id="selectLanguage" required="required" label="${LabelLanguage}" autofocus></select> </div> <button is="emby-button" type="submit" class="raised button-submit block"> <span>${Upload}</span> </button> </div> </div> </form> </div> </div> ',"core"),o.Z.tv&&r.Z.centerFocus.on(s,!1),s.addEventListener("close",(function(){o.Z.tv&&r.Z.centerFocus.off(s,!1),n.ZP.hide(),t(F)})),i.default.open(s),(a=s).querySelector(".uploadSubtitleForm").addEventListener("submit",E),a.querySelector("#uploadSubtitle").addEventListener("change",(function(){!function(e,t){var l=t[0];if(!x(l))return e.querySelector("#subtitleOutput").innerHTML="",e.querySelector("#fldUpload").classList.add("hide"),e.querySelector("#labelDropSubtitle").classList.remove("hide"),void(C=null);C=l;var i,a=new FileReader;a.onerror=P,a.onloadstart=function(){e.querySelector("#fldUpload").classList.add("hide")},a.onabort=function(){n.ZP.hide(),console.debug("File read cancelled")},a.onload=(i=l,function(){var t='<a><i class="material-icons" style="transform: translateY(25%);">subtitles</i><span>'+escape(i.name)+"</span><a/>";e.querySelector("#subtitleOutput").innerHTML=t,e.querySelector("#fldUpload").classList.remove("hide"),e.querySelector("#labelDropSubtitle").classList.add("hide")}),a.readAsDataURL(l)}(a,this.files)})),a.querySelector(".btnBrowse").addEventListener("click",(function(){a.querySelector("#uploadSubtitle").click()}));var d=s.querySelector("#selectLanguage");e.languages&&(d.innerHTML=e.languages.list||null,d.value=e.languages.value||null),s.querySelector(".btnCancel").addEventListener("click",(function(){i.default.close(s)}))}(e,t)}))}var T={show:H}},13005:function(e,t,l){var i=l(54933),a=l.n(i),s=l(93476),n=l.n(s)()(a());n.push([e.id,".subtitleEditor-dropZone{-webkit-align-items:center;align-items:center;border:.2em dashed;border-radius:.25em;display:-webkit-flex;display:flex;height:12em;-webkit-justify-content:center;justify-content:center;position:relative;text-align:center}",""]),t.Z=n}}]);