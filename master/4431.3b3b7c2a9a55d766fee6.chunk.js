"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4431],{64431:function(e,t,a){a.r(t),a.d(t,{default:function(){return d},editor:function(){return u}}),a(98010),a(63238),a(95623),a(61514),a(61013),a(99785);var i=a(33942),n=a(83094),r=a(90914);function c(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function l(e,t,a){return t&&c(e.prototype,t),a&&c(e,a),Object.defineProperty(e,"prototype",{writable:!1}),e}function o(e,t){return e.filter((function(e){return e.Type==t}))[0]}function s(e,t,a,i){return o(e.ImageOptions||[],a)||o(t.DefaultImageOptions||[],a)||{Type:n=a,MinWidth:0,Limit:"Primary"===n?1:0};var n}function p(e,t,a){var c=r.default.createDialog({size:"small",removeOnClose:!0,scrollY:!1});c.classList.add("formDialog"),c.innerHTML=i.ZP.translateHtml('<div class="formDialogHeader"> <button type="button" is="paper-icon-button-light" class="btnCancel autoSize" tabindex="-1" title="${ButtonBack}"><span class="material-icons arrow_back" aria-hidden="true"></span></button> <h3 class="formDialogHeaderTitle"> ${HeaderImageOptions} </h3> </div> <div class="formDialogContent scrollY"> <div class="dialogContentInner dialog-content-centered"> <form style="margin:1.5em auto 0"> <div class="verticalSection"> <h3 class="checkboxListLabel">${HeaderFetchImages}</h3> <div class="imageSelections checkboxList"> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="Primary"/> <span>${Primary}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="Art"/> <span>${Art}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="BoxRear"/> <span>${Back}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="Banner"/> <span>${Banner}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="Box"/> <span>${Box}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="Disc"/> <span>${Disc}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="Logo"/> <span>${Logo}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="Menu"/> <span>${Menu}</span> </label> <label> <input type="checkbox" is="emby-checkbox" class="imageType" data-imagetype="Thumb"/> <span>${Thumb}</span> </label> </div> </div> <div class="backdropFields"> <div class="inputContainer"> <input is="emby-input" type="number" id="txtMaxBackdrops" pattern="[0-9]*" required="required" min="0" label="${LabelMaxBackdropsPerItem}"/> </div> <div class="inputContainer"> <input is="emby-input" type="number" id="txtMinBackdropDownloadWidth" pattern="[0-9]*" required="required" min="0" label="${LabelMinBackdropDownloadWidth}"/> </div> </div> </form> </div> </div> '),c.addEventListener("close",(function(){!function(e,t){t.ImageOptions=Array.prototype.map.call(e.querySelectorAll(".imageType:not(.hide)"),(function(e){return{Type:e.getAttribute("data-imagetype"),Limit:e.checked?1:0,MinWidth:0}})),t.ImageOptions.push({Type:"Backdrop",Limit:e.querySelector("#txtMaxBackdrops").value,MinWidth:e.querySelector("#txtMinBackdropDownloadWidth").value})}(c,t)})),function(e,t,a,i){var r,c=i.SupportedImageTypes||[];r=e.querySelector(".backdropFields"),c.includes("Backdrop")?(r.classList.remove("hide"),r.querySelector("input").setAttribute("required","required")):(r.classList.add("hide"),r.querySelector("input").setAttribute("required",""),r.querySelector("input").removeAttribute("required")),Array.prototype.forEach.call(e.querySelectorAll(".imageType"),(function(e){var t=e.getAttribute("data-imagetype"),r=n.ZP.parentWithTag(e,"LABEL");c.includes(t)?r.classList.remove("hide"):r.classList.add("hide"),s(a,i,t).Limit?e.checked=!0:e.checked=!1}));var l=s(a,i,"Backdrop");e.querySelector("#txtMaxBackdrops").value=l.Limit,e.querySelector("#txtMinBackdropDownloadWidth").value=l.MinWidth}(c,0,t,a),r.default.open(c).then((function(){})).catch((function(){})),c.querySelector(".btnCancel").addEventListener("click",(function(){r.default.close(c)}))}a(45368),a(20716),a(83225);var u=l((function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.show=p})),d=u}}]);