"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6408],{21767:function(e,t,i){i.r(t),i(61013),i(27471),i(5769),i(63238),i(61418),i(17460),i(14078),i(98010);var n=i(65009),s=i.n(n),o=(i(72326),i(45368),i(93586)),r=i(85951);function a(e,t,i,n,o,r){var a='<div class="checkboxList paperList" style="padding: .5em 1em;">';a+=t.map((function(e){var t=(r?-1!=o.indexOf(e.Id):-1==o.indexOf(e.Id))?' checked="checked"':"";return'<label><input is="emby-checkbox" class="'+i+'" type="checkbox" data-itemid="'+e.Id+'"'+t+"/><span>"+s()(e.Name)+"</span></label>"})).join(""),a+="</div>",e.html(a).trigger("create")}function c(){var e,t,i,n;return e=$(this).parents(".page"),t=(0,r.a)("type"),i=ApiClient.getNamedConfiguration(d),n=ApiClient.getJSON(ApiClient.getUrl("Notifications/Types")),Promise.all([i,n]).then((function(i){var n=i[0],s=n.Options.filter((function(e){return e.Type==t}))[0];s||(s={Type:t},n.Options.push(s)),s.Enabled=$("#chkEnabled",e).is(":checked"),s.SendToUserMode=$("#selectUsers",e).val(),s.DisabledMonitorUsers=$(".chkMonitor",e).get().filter((function(e){return!e.checked})).map((function(e){return e.getAttribute("data-itemid")})),s.SendToUsers=$(".chkSendTo",e).get().filter((function(e){return e.checked})).map((function(e){return e.getAttribute("data-itemid")})),s.DisabledServices=$(".chkService",e).get().filter((function(e){return!e.checked})).map((function(e){return e.getAttribute("data-itemid")})),ApiClient.updateNamedConfiguration(d,n).then((function(){o.ZP.processServerConfigurationUpdateResult(),o.ZP.navigate("notificationsettings.html")}))})),!1}var d="notifications";$(document).on("pageinit","#notificationSettingPage",(function(){var e=this;$("#selectUsers",e).on("change",(function(){"Custom"==this.value?$(".selectCustomUsers",e).show():$(".selectCustomUsers",e).hide()})),$(".notificationSettingForm").off("submit",c).on("submit",c)})).on("pageshow","#notificationSettingPage",(function(){var e,t,i,n,o,c;e=this,t=(0,r.a)("type"),i=ApiClient.getUsers(),n=ApiClient.getNamedConfiguration(d),o=ApiClient.getJSON(ApiClient.getUrl("Notifications/Types")),c=ApiClient.getJSON(ApiClient.getUrl("Notifications/Services")),Promise.all([i,n,o,c]).then((function(i){var n=i[0],o=i[1],r=i[2],c=i[3],d=o.Options.filter((function(e){return e.Type==t}))[0],l=r.filter((function(e){return e.Type==t}))[0]||{};l.IsBasedOnUserEvent?$(".monitorUsers",e).show():$(".monitorUsers",e).hide(),$(".notificationType",e).html(s()(l.Name||"")||"Unknown Notification"),d||(d={DisabledMonitorUsers:[],SendToUsers:[],DisabledServices:[],SendToUserMode:"Admins"}),a($(".monitorUsersList",e),n,"chkMonitor",0,d.DisabledMonitorUsers),a($(".sendToUsersList",e),n,"chkSendTo",0,d.SendToUsers,!0),a($(".servicesList",e),c,"chkService",0,d.DisabledServices),$("#chkEnabled",e).prop("checked",d.Enabled||!1),$("#selectUsers",e).val(d.SendToUserMode).trigger("change")}))}))}}]);